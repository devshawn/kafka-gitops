plugins {
    id 'java'
    id 'groovy'
    id 'application'
    id 'idea'
    id 'jacoco'
    id 'org.inferred.processors' version '2.1.0'
    id "net.ltgt.apt" version "0.21"
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

apply plugin: 'net.ltgt.apt-idea'

group 'com.devshawn'

mainClassName = 'com.devshawn.kafka.gitops.MainCommand'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.8.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.2"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.2"
    compile 'info.picocli:picocli:4.6.3'

    implementation ('io.confluent:kafka-schema-registry-client:7.1.1')
    implementation ('io.confluent:kafka-json-schema-provider:7.1.1')
    implementation ('io.confluent:kafka-protobuf-serializer:7.1.1')
    implementation ('io.github.java-diff-utils:java-diff-utils:4.11')

    compile 'org.slf4j:slf4j-api:1.7.36'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.11'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.11'

    processor 'org.inferred:freebuilder:2.7.0'

    testCompile group: 'junit', name: 'junit', version: '4.13.2'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.16'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.3-groovy-2.5'
    testCompile group: 'cglib', name: 'cglib-nodep', version: '2.2.2'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
    testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    excludes: [
                            '**/*_Builder*/**',
                    ])
        })
    }
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.devshawn.kafka.gitops.MainCommand'
        )
    }
}

task buildExecutableJar(type: Exec) {
    commandLine "sh", "build.sh"
}

task buildRelease(type: Zip, group: "build") {
    from("$buildDir/output")
}

buildRelease.dependsOn buildExecutableJar
buildExecutableJar.dependsOn shadowJar
